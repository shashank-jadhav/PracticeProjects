<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       ">
	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="vm://localhost?broker.persistent=false" />
	</bean>
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		init-method="start" destroy-method="stop">
		<property name="maxConnections" value="8" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>


	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="pooledConnectionFactory" />
	</bean>

	<camelContext xmlns="http://camel.apache.org/schema/spring">

		<dataFormats>
			<!-- Here we define a Json data format with the id jack and that it should 
				use the TestPojo as the class type when doing unmarshal. The unmarshalTypeName 
				is optional, if not provided Camel will use a Map as the type. -->
			<json id="jack" library="Jackson"
				unmarshalTypeName="org.apache.camel.component.jackson.TestPojo" />
		</dataFormats>

		<route>
			<from uri="direct:back" />
			<unmarshal ref="jack" />
			<to uri="mock:reverse" />
		</route>


	</camelContext>

</beans>